package ranking

import (
	"encoding/json"
	"fmt"
	"log"
	"math/rand"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/bwmarrin/discordgo"
	"github.com/go-redis/redis/v8"
)

// CinemaOption represents a movie option in the auction.
type CinemaOption struct {
	Name  string         `json:"name"`
	Total int            `json:"total"`
	Bets  map[string]int `json:"bets"` // userID: amount
}

// PendingCinemaBid represents a pending bid for confirmation.
type PendingCinemaBid struct {
	UserID         string
	IsNew          bool
	Name           string // for new movies
	Index          int    // for existing movies (0-based)
	Amount         int
	UserMessageID  string // ID of the message with buttons for the user
	AdminMessageID string // ID of the message with buttons for admins
}

func randomColor() int {
	colors := []int{0x1E90FF, 0x00FF00, 0xFFD700, 0xFF69B4, 0x00CED1}
	return colors[rand.Intn(len(colors))]
}

func (r *Ranking) SaveCinemaOptions() error {
	data, err := json.Marshal(r.cinemaOptions)
	if err != nil {
		return fmt.Errorf("failed to marshal cinemaOptions: %v", err)
	}
	err = r.redis.Set(r.ctx, "cinema_options", data, 0).Err()
	if err != nil {
		return fmt.Errorf("failed to save cinemaOptions to Redis: %v", err)
	}
	return nil
}

func (r *Ranking) LoadCinemaOptions() error {
	data, err := r.redis.Get(r.ctx, "cinema_options").Result()
	if err == redis.Nil {
		r.cinemaOptions = []CinemaOption{}
		return nil
	}
	if err != nil {
		return fmt.Errorf("failed to load cinemaOptions from Redis: %v", err)
	}
	if err := json.Unmarshal([]byte(data), &r.cinemaOptions); err != nil {
		return fmt.Errorf("failed to unmarshal cinemaOptions: %v", err)
	}
	return nil
}

func (r *Ranking) HandleCinemaCommand(s *discordgo.Session, m *discordgo.MessageCreate, command string) {
	log.Printf("–ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ !cinema: %s –æ—Ç %s", command, m.Author.ID)
	r.mu.Lock()
	defer r.mu.Unlock()

	args := strings.Fields(command)
	if len(args) < 3 {
		log.Printf("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã: %s", command)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã",
			Color:       0xFF0000,
			Fields: []*discordgo.MessageEmbedField{
				{Name: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", Value: "`!cinema <–Ω–∞–∑–≤–∞–Ω–∏–µ> <—Å—É–º–º–∞>`\n–ü—Ä–∏–º–µ—Ä: `!cinema –ê–≤–∞—Ç–∞—Ä 100`", Inline: false},
			},
			Footer:    &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp: time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !cinema: %v", err)
		}
		return
	}

	amount, err := strconv.Atoi(args[len(args)-1])
	if err != nil || amount <= 0 {
		log.Printf("–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞: %s", args[len(args)-1])
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !cinema: %v", err)
		}
		return
	}

	name := strings.Join(args[1:len(args)-1], " ")
	if name == "" {
		log.Printf("–ü—É—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞")
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !cinema: %v", err)
		}
		return
	}

	balance := r.GetRating(m.Author.ID)
	if balance < amount {
		log.Printf("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %s: –±–∞–ª–∞–Ω—Å %d, —Ç—Ä–µ–±—É–µ—Ç—Å—è %d", m.Author.ID, balance, amount)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: fmt.Sprintf("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤. –í–∞—à –±–∞–ª–∞–Ω—Å: %d", balance),
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !cinema: %v", err)
		}
		return
	}

	bidID := generateBidID(m.Author.ID)
	pendingBid := PendingCinemaBid{
		UserID: m.Author.ID,
		IsNew:  true,
		Name:   name,
		Amount: amount,
	}

	bidData, err := json.Marshal(pendingBid)
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç–∞–≤–∫–∏: %v", err)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞–≤–∫–∏",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !cinema: %v", err)
		}
		return
	}
	err = r.redis.Set(r.ctx, "pending_bid:"+bidID, bidData, 0).Err()
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏ –≤ Redis: %v", err)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞–≤–∫–∏",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !cinema: %v", err)
		}
		return
	}

	embed := &discordgo.MessageEmbed{
		Title:       "üé• –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏ –Ω–∞ –∫–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
		Description: "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à—É —Å—Ç–∞–≤–∫—É",
		Color:       randomColor(),
		Fields: []*discordgo.MessageEmbedField{
			{Name: "–§–∏–ª—å–º", Value: name, Inline: true},
			{Name: "–°—É–º–º–∞", Value: fmt.Sprintf("%d –∫—Ä–µ–¥–∏—Ç–æ–≤", amount), Inline: true},
			{Name: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", Value: fmt.Sprintf("<@%s>", m.Author.ID), Inline: true},
		},
		Footer:    &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
		Timestamp: time.Now().Format(time.RFC3339),
	}

	components := []discordgo.MessageComponent{
		discordgo.ActionsRow{
			Components: []discordgo.MessageComponent{
				discordgo.Button{Label: "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", Style: discordgo.SuccessButton, CustomID: "user_confirm_" + bidID},
				discordgo.Button{Label: "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", Style: discordgo.DangerButton, CustomID: "user_decline_" + bidID},
			},
		},
	}

	msg, err := s.ChannelMessageSendComplex(m.ChannelID, &discordgo.MessageSend{
		Embed:      embed,
		Components: components,
		Reference:  m.Reference(),
	})
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —é–∑–µ—Ä—É: %v", err)
		r.redis.Del(r.ctx, "pending_bid:"+bidID) // –£–¥–∞–ª—è–µ–º —Å—Ç–∞–≤–∫—É –ø—Ä–∏ –æ—à–∏–±–∫–µ
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞–≤–∫–∏",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è !cinema: %v", err)
		}
		return
	}
	pendingBid.UserMessageID = msg.ID

	bidData, err = json.Marshal(pendingBid)
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç–∞–≤–∫–∏ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è UserMessageID: %v", err)
		r.redis.Del(r.ctx, "pending_bid:"+bidID)
		return
	}
	err = r.redis.Set(r.ctx, "pending_bid:"+bidID, bidData, 0).Err()
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏ –≤ Redis –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è UserMessageID: %v", err)
		r.redis.Del(r.ctx, "pending_bid:"+bidID)
		return
	}

	log.Printf("–°—Ç–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞, bidID: %s, —Ñ–∏–ª—å–º: %s, —Å—É–º–º–∞: %d", bidID, name, amount)
}

func (r *Ranking) HandleBetCinemaCommand(s *discordgo.Session, m *discordgo.MessageCreate, command string) {
	log.Printf("–ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ !betcinema: %s –æ—Ç %s", command, m.Author.ID)
	r.mu.Lock()
	defer r.mu.Unlock()

	args := strings.Fields(command)
	if len(args) != 3 {
		log.Printf("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã: %s", command)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã",
			Color:       0xFF0000,
			Fields: []*discordgo.MessageEmbedField{
				{Name: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", Value: "`!betcinema <–Ω–æ–º–µ—Ä> <—Å—É–º–º–∞>`\n–ü—Ä–∏–º–µ—Ä: `!betcinema 1 50`", Inline: false},
			},
			Footer:    &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp: time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !betcinema: %v", err)
		}
		return
	}

	// –°–æ–∑–¥–∞–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–æ–ø–∏—é –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞
	sortedOptions := make([]CinemaOption, len(r.cinemaOptions))
	copy(sortedOptions, r.cinemaOptions)
	sort.Slice(sortedOptions, func(i, j int) bool {
		return sortedOptions[i].Total > sortedOptions[j].Total
	})

	index, err := strconv.Atoi(args[1])
	if err != nil || index < 1 || index > len(sortedOptions) {
		log.Printf("–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞: %s, –¥–æ—Å—Ç—É–ø–Ω–æ: %d —Ñ–∏–ª—å–º–æ–≤", args[1], len(sortedOptions))
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: fmt.Sprintf("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞ (–¥–æ—Å—Ç—É–ø–Ω–æ: 1-%d)", len(sortedOptions)),
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !betcinema: %v", err)
		}
		return
	}

	// –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ñ–∏–ª—å–º –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º –º–∞—Å—Å–∏–≤–µ
	selectedFilm := sortedOptions[index-1]
	var originalIndex int = -1
	for i, option := range r.cinemaOptions {
		if option.Name == selectedFilm.Name && option.Total == selectedFilm.Total {
			originalIndex = i
			break
		}
	}

	if originalIndex == -1 {
		log.Printf("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∏–ª—å–º –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º –º–∞—Å—Å–∏–≤–µ: %s", selectedFilm.Name)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∏–ª—å–º –¥–ª—è —Å—Ç–∞–≤–∫–∏",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !betcinema: %v", err)
		}
		return
	}

	amount, err := strconv.Atoi(args[2])
	if err != nil || amount <= 0 {
		log.Printf("–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞: %s", args[2])
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !betcinema: %v", err)
		}
		return
	}

	balance := r.GetRating(m.Author.ID)
	if balance < amount {
		log.Printf("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %s: –±–∞–ª–∞–Ω—Å %d, —Ç—Ä–µ–±—É–µ—Ç—Å—è %d", m.Author.ID, balance, amount)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: fmt.Sprintf("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤. –í–∞—à –±–∞–ª–∞–Ω—Å: %d", balance),
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !betcinema: %v", err)
		}
		return
	}

	bidID := generateBidID(m.Author.ID)
	pendingBid := PendingCinemaBid{
		UserID: m.Author.ID,
		IsNew:  false,
		Index:  originalIndex, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å
		Amount: amount,
	}

	bidData, err := json.Marshal(pendingBid)
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç–∞–≤–∫–∏: %v", err)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞–≤–∫–∏",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !betcinema: %v", err)
		}
		return
	}
	err = r.redis.Set(r.ctx, "pending_bid:"+bidID, bidData, 0).Err()
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏ –≤ Redis: %v", err)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞–≤–∫–∏",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !betcinema: %v", err)
		}
		return
	}

	embed := &discordgo.MessageEmbed{
		Title:       "üé• –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏ –Ω–∞ –∫–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
		Description: "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à—É —Å—Ç–∞–≤–∫—É",
		Color:       randomColor(),
		Fields: []*discordgo.MessageEmbedField{
			{Name: "–§–∏–ª—å–º", Value: selectedFilm.Name, Inline: true},
			{Name: "–°—É–º–º–∞", Value: fmt.Sprintf("%d –∫—Ä–µ–¥–∏—Ç–æ–≤", amount), Inline: true},
			{Name: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", Value: fmt.Sprintf("<@%s>", m.Author.ID), Inline: true},
		},
		Footer:    &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
		Timestamp: time.Now().Format(time.RFC3339),
	}

	components := []discordgo.MessageComponent{
		discordgo.ActionsRow{
			Components: []discordgo.MessageComponent{
				discordgo.Button{Label: "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", Style: discordgo.SuccessButton, CustomID: "user_confirm_" + bidID},
				discordgo.Button{Label: "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", Style: discordgo.DangerButton, CustomID: "user_decline_" + bidID},
			},
		},
	}

	msg, err := s.ChannelMessageSendComplex(m.ChannelID, &discordgo.MessageSend{
		Embed:      embed,
		Components: components,
		Reference:  m.Reference(),
	})
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —é–∑–µ—Ä—É: %v", err)
		r.redis.Del(r.ctx, "pending_bid:"+bidID)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞–≤–∫–∏",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è !betcinema: %v", err)
		}
		return
	}
	pendingBid.UserMessageID = msg.ID

	bidData, err = json.Marshal(pendingBid)
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç–∞–≤–∫–∏ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è UserMessageID: %v", err)
		r.redis.Del(r.ctx, "pending_bid:"+bidID)
		return
	}
	err = r.redis.Set(r.ctx, "pending_bid:"+bidID, bidData, 0).Err()
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏ –≤ Redis –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è UserMessageID: %v", err)
		r.redis.Del(r.ctx, "pending_bid:"+bidID)
		return
	}

	log.Printf("–°—Ç–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞, bidID: %s, —Ñ–∏–ª—å–º: %s, —Å—É–º–º–∞: %d", bidID, selectedFilm.Name, amount)
}

func (r *Ranking) HandleCinemaButton(s *discordgo.Session, i *discordgo.InteractionCreate) {
	customID := i.MessageComponentData().CustomID
	parts := strings.Split(customID, "_")
	if len(parts) < 3 {
		s.InteractionRespond(i.Interaction, &discordgo.InteractionResponse{
			Type: discordgo.InteractionResponseChannelMessageWithSource,
			Data: &discordgo.InteractionResponseData{
				Content: "‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–Ω–æ–ø–∫–∏",
				Flags:   discordgo.MessageFlagsEphemeral,
			},
		})
		return
	}
	action := parts[0] + "_" + parts[1]
	bidID := strings.Join(parts[2:], "_")

	bidData, err := r.redis.Get(r.ctx, "pending_bid:"+bidID).Result()
	if err == redis.Nil {
		s.InteractionRespond(i.Interaction, &discordgo.InteractionResponse{
			Type: discordgo.InteractionResponseChannelMessageWithSource,
			Data: &discordgo.InteractionResponseData{
				Content: "‚ùå –°—Ç–∞–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞",
				Flags:   discordgo.MessageFlagsEphemeral,
			},
		})
		return
	}
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞–≤–∫–∏ %s: %v", bidID, err)
		s.InteractionRespond(i.Interaction, &discordgo.InteractionResponse{
			Type: discordgo.InteractionResponseChannelMessageWithSource,
			Data: &discordgo.InteractionResponseData{
				Content: "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç–∞–≤–∫–∏",
				Flags:   discordgo.MessageFlagsEphemeral,
			},
		})
		return
	}

	var bid PendingCinemaBid
	if err := json.Unmarshal([]byte(bidData), &bid); err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç–∞–≤–∫–∏ %s: %v", bidID, err)
		s.InteractionRespond(i.Interaction, &discordgo.InteractionResponse{
			Type: discordgo.InteractionResponseChannelMessageWithSource,
			Data: &discordgo.InteractionResponseData{
				Content: "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç–∞–≤–∫–∏",
				Flags:   discordgo.MessageFlagsEphemeral,
			},
		})
		return
	}

	if strings.HasPrefix(action, "user_") {
		if i.Member.User.ID != bid.UserID {
			s.InteractionRespond(i.Interaction, &discordgo.InteractionResponse{
				Type: discordgo.InteractionResponseChannelMessageWithSource,
				Data: &discordgo.InteractionResponseData{
					Content: "‚ùå –¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä —Å—Ç–∞–≤–∫–∏ –º–æ–∂–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –µ—ë",
					Flags:   discordgo.MessageFlagsEphemeral,
				},
			})
			return
		}
	} else if strings.HasPrefix(action, "admin_") {
		if !r.IsAdmin(i.Member.User.ID) {
			s.InteractionRespond(i.Interaction, &discordgo.InteractionResponse{
				Type: discordgo.InteractionResponseChannelMessageWithSource,
				Data: &discordgo.InteractionResponseData{
					Content: "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω—è—Ç—å —Å—Ç–∞–≤–∫–∏",
					Flags:   discordgo.MessageFlagsEphemeral,
				},
			})
			return
		}
	} else {
		s.InteractionRespond(i.Interaction, &discordgo.InteractionResponse{
			Type: discordgo.InteractionResponseChannelMessageWithSource,
			Data: &discordgo.InteractionResponseData{
				Content: "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –∫–Ω–æ–ø–∫–∏",
				Flags:   discordgo.MessageFlagsEphemeral,
			},
		})
		return
	}

	r.mu.Lock()
	defer r.mu.Unlock()

	if action == "user_confirm" {
		// –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
		balance := r.GetRating(bid.UserID)
		if balance < bid.Amount {
			r.redis.Del(r.ctx, "pending_bid:"+bidID)
			userEmbed := &discordgo.MessageEmbed{
				Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
				Description: fmt.Sprintf("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –í–∞—à –±–∞–ª–∞–Ω—Å: %d", balance),
				Color:       0xFF0000,
				Fields: []*discordgo.MessageEmbedField{
					{Name: "–§–∏–ª—å–º", Value: bid.Name, Inline: true},
					{Name: "–°—É–º–º–∞", Value: fmt.Sprintf("%d –∫—Ä–µ–¥–∏—Ç–æ–≤", bid.Amount), Inline: true},
				},
				Footer:    &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
				Timestamp: time.Now().Format(time.RFC3339),
			}
			s.ChannelMessageEditEmbed(i.ChannelID, bid.UserMessageID, userEmbed)
			s.InteractionRespond(i.Interaction, &discordgo.InteractionResponse{
				Type: discordgo.InteractionResponseChannelMessageWithSource,
				Data: &discordgo.InteractionResponseData{
					Content: "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤",
					Flags:   discordgo.MessageFlagsEphemeral,
				},
			})
			return
		}

		// –ó–∞–º–æ—Ä–∞–∂–∏–≤–∞–µ–º –∫—Ä–µ–¥–∏—Ç—ã
		r.UpdateRating(bid.UserID, -bid.Amount)

		// –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤ –≤ –∞–¥–º–∏–Ω-—á–∞—Ç–µ
		adminTags := ""
		for adminID := range r.admins {
			adminTags += fmt.Sprintf("<@%s> ", adminID)
		}
		adminEmbed := &discordgo.MessageEmbed{
			Title:       "üé• –ù–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ –Ω–∞ –∫–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: fmt.Sprintf("%s –ü—Ä–∏—à–ª–∞ –∑–∞—è–≤–∫–∞ –æ—Ç <@%s> –Ω–∞ —Ñ–∏–ª—å–º \"%s\" %d –∫—Ä–µ–¥–∏—Ç–æ–≤", adminTags, bid.UserID, bid.Name, bid.Amount),
			Color:       randomColor(),
			Fields: []*discordgo.MessageEmbedField{
				{Name: "–§–∏–ª—å–º", Value: bid.Name, Inline: true},
				{Name: "–°—É–º–º–∞", Value: fmt.Sprintf("%d –∫—Ä–µ–¥–∏—Ç–æ–≤", bid.Amount), Inline: true},
				{Name: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", Value: fmt.Sprintf("<@%s>", bid.UserID), Inline: true},
			},
			Footer:    &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp: time.Now().Format(time.RFC3339),
		}

		adminComponents := []discordgo.MessageComponent{
			discordgo.ActionsRow{
				Components: []discordgo.MessageComponent{
					discordgo.Button{Label: "‚úÖ –ü—Ä–∏–Ω—è—Ç—å", Style: discordgo.SuccessButton, CustomID: "admin_accept_" + bidID},
					discordgo.Button{Label: "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", Style: discordgo.DangerButton, CustomID: "admin_reject_" + bidID},
				},
			},
		}

		adminMsg, err := s.ChannelMessageSendComplex(r.cinemaChannelID, &discordgo.MessageSend{
			Embed:      adminEmbed,
			Components: adminComponents,
		})
		if err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º: %v", err)
			r.UpdateRating(bid.UserID, bid.Amount) // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—Ä–µ–¥–∏—Ç—ã
			r.redis.Del(r.ctx, "pending_bid:"+bidID)
			userEmbed := &discordgo.MessageEmbed{
				Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
				Description: "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∞–≤–∫–∏ –∞–¥–º–∏–Ω–∞–º. –î–µ–Ω—å–≥–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã.",
				Color:       0xFF0000,
				Fields: []*discordgo.MessageEmbedField{
					{Name: "–§–∏–ª—å–º", Value: bid.Name, Inline: true},
					{Name: "–°—É–º–º–∞", Value: fmt.Sprintf("%d –∫—Ä–µ–¥–∏—Ç–æ–≤", bid.Amount), Inline: true},
				},
				Footer:    &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
				Timestamp: time.Now().Format(time.RFC3339),
			}
			s.ChannelMessageEditEmbed(i.ChannelID, bid.UserMessageID, userEmbed)
			s.InteractionRespond(i.Interaction, &discordgo.InteractionResponse{
				Type: discordgo.InteractionResponseChannelMessageWithSource,
				Data: &discordgo.InteractionResponseData{
					Content: "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∞–≤–∫–∏ –∞–¥–º–∏–Ω–∞–º",
					Flags:   discordgo.MessageFlagsEphemeral,
				},
			})
			return
		}

		bid.AdminMessageID = adminMsg.ID

		bidData, err := json.Marshal(bid)
		if err != nil {
			log.Printf("–û—à–∏–±–∫–∞ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç–∞–≤–∫–∏: %v", err)
			r.UpdateRating(bid.UserID, bid.Amount) // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—Ä–µ–¥–∏—Ç—ã
			r.redis.Del(r.ctx, "pending_bid:"+bidID)
			return
		}
		err = r.redis.Set(r.ctx, "pending_bid:"+bidID, bidData, 0).Err()
		if err != nil {
			log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏ –≤ Redis: %v", err)
			r.UpdateRating(bid.UserID, bid.Amount) // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—Ä–µ–¥–∏—Ç—ã
			r.redis.Del(r.ctx, "pending_bid:"+bidID)
			return
		}

		userEmbed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚úÖ –°—Ç–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∞–º. –ö—Ä–µ–¥–∏—Ç—ã –∑–∞–º–æ—Ä–æ–∂–µ–Ω—ã.",
			Color:       0x00FF00,
			Fields: []*discordgo.MessageEmbedField{
				{Name: "–§–∏–ª—å–º", Value: bid.Name, Inline: true},
				{Name: "–°—É–º–º–∞", Value: fmt.Sprintf("%d –∫—Ä–µ–¥–∏—Ç–æ–≤", bid.Amount), Inline: true},
				{Name: "–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å", Value: fmt.Sprintf("%d –∫—Ä–µ–¥–∏—Ç–æ–≤", r.GetRating(bid.UserID)), Inline: true},
			},
			Footer:    &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp: time.Now().Format(time.RFC3339),
		}

		s.ChannelMessageEditComplex(&discordgo.MessageEdit{
			Channel:    i.ChannelID,
			ID:         bid.UserMessageID,
			Embed:      userEmbed,
			Components: &[]discordgo.MessageComponent{},
		})

		s.InteractionRespond(i.Interaction, &discordgo.InteractionResponse{
			Type: discordgo.InteractionResponseChannelMessageWithSource,
			Data: &discordgo.InteractionResponseData{
				Content: "‚úÖ –°—Ç–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞",
				Flags:   discordgo.MessageFlagsEphemeral,
			},
		})

		r.LogCreditOperation(s, fmt.Sprintf("–ó–∞–º–æ—Ä–æ–∂–µ–Ω–æ %d –∫—Ä–µ–¥–∏—Ç–æ–≤ —É <@%s> –∑–∞ —Å—Ç–∞–≤–∫—É –Ω–∞ '%s'", bid.Amount, bid.UserID, bid.Name))
	} else if action == "user_decline" {
		r.redis.Del(r.ctx, "pending_bid:"+bidID)

		userEmbed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –°—Ç–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞",
			Color:       0xFF0000,
			Fields: []*discordgo.MessageEmbedField{
				{Name: "–§–∏–ª—å–º", Value: bid.Name, Inline: true},
				{Name: "–°—É–º–º–∞", Value: fmt.Sprintf("%d –∫—Ä–µ–¥–∏—Ç–æ–≤", bid.Amount), Inline: true},
			},
			Footer:    &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp: time.Now().Format(time.RFC3339),
		}

		s.ChannelMessageEditComplex(&discordgo.MessageEdit{
			Channel:    i.ChannelID,
			ID:         bid.UserMessageID,
			Embed:      userEmbed,
			Components: &[]discordgo.MessageComponent{},
		})

		s.InteractionRespond(i.Interaction, &discordgo.InteractionResponse{
			Type: discordgo.InteractionResponseChannelMessageWithSource,
			Data: &discordgo.InteractionResponseData{
				Content: "‚ùå –°—Ç–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞",
				Flags:   discordgo.MessageFlagsEphemeral,
			},
		})
	} else if action == "admin_accept" {
		if bid.IsNew {
			r.cinemaOptions = append(r.cinemaOptions, CinemaOption{
				Name:  bid.Name,
				Total: bid.Amount,
				Bets:  map[string]int{bid.UserID: bid.Amount},
			})
		} else {
			if bid.Index >= len(r.cinemaOptions) {
				s.InteractionRespond(i.Interaction, &discordgo.InteractionResponse{
					Type: discordgo.InteractionResponseChannelMessageWithSource,
					Data: &discordgo.InteractionResponseData{
						Content: "‚ùå –í–∞—Ä–∏–∞–Ω—Ç –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
						Flags:   discordgo.MessageFlagsEphemeral,
					},
				})
				return
			}
			r.cinemaOptions[bid.Index].Total += bid.Amount
			r.cinemaOptions[bid.Index].Bets[bid.UserID] += bid.Amount
		}

		if err := r.SaveCinemaOptions(); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è cinemaOptions: %v", err)
			s.InteractionRespond(i.Interaction, &discordgo.InteractionResponse{
				Type: discordgo.InteractionResponseChannelMessageWithSource,
				Data: &discordgo.InteractionResponseData{
					Content: "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∞—É–∫—Ü–∏–æ–Ω–∞",
					Flags:   discordgo.MessageFlagsEphemeral,
				},
			})
			return
		}

		r.redis.Del(r.ctx, "pending_bid:"+bidID)

		adminEmbed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚úÖ –°—Ç–∞–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞",
			Color:       0x00FF00,
			Fields: []*discordgo.MessageEmbedField{
				{Name: "–§–∏–ª—å–º", Value: bid.Name, Inline: true},
				{Name: "–°—É–º–º–∞", Value: fmt.Sprintf("%d –∫—Ä–µ–¥–∏—Ç–æ–≤", bid.Amount), Inline: true},
				{Name: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", Value: fmt.Sprintf("<@%s>", bid.UserID), Inline: true},
			},
			Footer:    &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp: time.Now().Format(time.RFC3339),
		}

		s.ChannelMessageEditComplex(&discordgo.MessageEdit{
			Channel:    r.cinemaChannelID,
			ID:         bid.AdminMessageID,
			Embed:      adminEmbed,
			Components: &[]discordgo.MessageComponent{},
		})

		s.InteractionRespond(i.Interaction, &discordgo.InteractionResponse{
			Type: discordgo.InteractionResponseChannelMessageWithSource,
			Data: &discordgo.InteractionResponseData{
				Content: "‚úÖ –°—Ç–∞–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞",
				Flags:   discordgo.MessageFlagsEphemeral,
			},
		})

		userEmbed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: fmt.Sprintf("‚úÖ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–∞ '%s' (%d –∫—Ä–µ–¥–∏—Ç–æ–≤) –ø—Ä–∏–Ω—è—Ç–∞ –∞–¥–º–∏–Ω–∞–º–∏!", bid.Name, bid.Amount),
			Color:       0x00FF00,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		s.ChannelMessageSendEmbed(r.floodChannelID, userEmbed)

		r.LogCreditOperation(s, fmt.Sprintf("–°—Ç–∞–≤–∫–∞ %d –∫—Ä–µ–¥–∏—Ç–æ–≤ –æ—Ç <@%s> –Ω–∞ '%s' –ø—Ä–∏–Ω—è—Ç–∞", bid.Amount, bid.UserID, bid.Name))
	} else if action == "admin_reject" {
		r.UpdateRating(bid.UserID, bid.Amount)
		r.redis.Del(r.ctx, "pending_bid:"+bidID)

		adminEmbed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –°—Ç–∞–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞, –∫—Ä–µ–¥–∏—Ç—ã –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã",
			Color:       0xFF0000,
			Fields: []*discordgo.MessageEmbedField{
				{Name: "–§–∏–ª—å–º", Value: bid.Name, Inline: true},
				{Name: "–°—É–º–º–∞", Value: fmt.Sprintf("%d –∫—Ä–µ–¥–∏—Ç–æ–≤", bid.Amount), Inline: true},
				{Name: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", Value: fmt.Sprintf("<@%s>", bid.UserID), Inline: true},
			},
			Footer:    &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp: time.Now().Format(time.RFC3339),
		}

		s.ChannelMessageEditComplex(&discordgo.MessageEdit{
			Channel:    r.cinemaChannelID,
			ID:         bid.AdminMessageID,
			Embed:      adminEmbed,
			Components: &[]discordgo.MessageComponent{},
		})

		s.InteractionRespond(i.Interaction, &discordgo.InteractionResponse{
			Type: discordgo.InteractionResponseChannelMessageWithSource,
			Data: &discordgo.InteractionResponseData{
				Content: "‚ùå –°—Ç–∞–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
				Flags:   discordgo.MessageFlagsEphemeral,
			},
		})

		userEmbed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: fmt.Sprintf("‚ùå –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–∞ '%s' (%d –∫—Ä–µ–¥–∏—Ç–æ–≤) –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∞–º–∏. –ö—Ä–µ–¥–∏—Ç—ã –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã.", bid.Name, bid.Amount),
			Color:       0xFF0000,
			Fields: []*discordgo.MessageEmbedField{
				{Name: "–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å", Value: fmt.Sprintf("%d –∫—Ä–µ–¥–∏—Ç–æ–≤", r.GetRating(bid.UserID)), Inline: true},
			},
			Footer:    &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp: time.Now().Format(time.RFC3339),
		}
		s.ChannelMessageSendEmbed(r.floodChannelID, userEmbed)

		r.LogCreditOperation(s, fmt.Sprintf("–í–æ–∑–≤—Ä–∞—â–µ–Ω–æ %d –∫—Ä–µ–¥–∏—Ç–æ–≤ <@%s> –∑–∞ –æ—Ç–∫–ª–æ–Ω—ë–Ω–Ω—É—é —Å—Ç–∞–≤–∫—É –Ω–∞ '%s'", bid.Amount, bid.UserID, bid.Name))
	}
}

func (r *Ranking) HandleCinemaListCommand(s *discordgo.Session, m *discordgo.MessageCreate) {
	log.Printf("–ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ !cinemalist –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %s", m.Author.ID)
	r.mu.Lock()
	defer r.mu.Unlock()

	if len(r.cinemaOptions) == 0 {
		log.Printf("–°–ø–∏—Å–æ–∫ cinemaOptions –ø—É—Å—Ç")
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "üìã –°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –ø—É—Å—Ç",
			Color:       randomColor(),
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !cinemalist: %v", err)
		}
		return
	}

	log.Printf("–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è %d —Ñ–∏–ª—å–º–æ–≤", len(r.cinemaOptions))

	// –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
	sortedOptions := make([]CinemaOption, len(r.cinemaOptions))
	copy(sortedOptions, r.cinemaOptions)

	// –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é (–æ—Ç –±–æ–ª—å—à–µ–≥–æ –∫ –º–µ–Ω—å—à–µ–º—É)
	sort.Slice(sortedOptions, func(i, j int) bool {
		return sortedOptions[i].Total > sortedOptions[j].Total
	})

	// –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –¥–≤—É–º—è –∫–æ–ª–æ–Ω–∫–∞–º–∏
	var builder strings.Builder
	builder.WriteString(fmt.Sprintf("**üé¨ –¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ (%d)**\n\n", len(r.cinemaOptions)))

	// –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏
	half := (len(sortedOptions) + 1) / 2

	for i := 0; i < half; i++ {
		// –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞
		if i < len(sortedOptions) {
			option1 := sortedOptions[i]
			filmName1 := option1.Name
			if filmName1 == "" {
				filmName1 = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
			}
			// –ë–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–±—Ä–µ–∑–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π
			if len(filmName1) > 18 {
				filmName1 = filmName1[:15] + "..."
			}
			builder.WriteString(fmt.Sprintf("`%2d.` %-18s `%6d`", i+1, filmName1, option1.Total))
		}

		// –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
		if i+half < len(sortedOptions) {
			option2 := sortedOptions[i+half]
			filmName2 := option2.Name
			if filmName2 == "" {
				filmName2 = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
			}
			if len(filmName2) > 18 {
				filmName2 = filmName2[:15] + "..."
			}
			builder.WriteString(fmt.Sprintf("   `%2d.` %-18s `%6d`", i+half+1, filmName2, option2.Total))
		}
		builder.WriteString("\n")
	}

	embed := &discordgo.MessageEmbed{
		Title:       "üé• –ö–ò–ù–û–ê–£–ö–¶–ò–û–ù",
		Description: builder.String(),
		Color:       0x1E90FF,
		Fields: []*discordgo.MessageEmbedField{
			{
				Name:   "üìã –ö–æ–º–∞–Ω–¥—ã",
				Value:  "‚Ä¢ `!betcinema <–Ω–æ–º–µ—Ä> <—Å—É–º–º–∞>` - –°—Ç–∞–≤–∫–∞ –Ω–∞ —Ñ–∏–ª—å–º\n‚Ä¢ `!cinema <–Ω–∞–∑–≤–∞–Ω–∏–µ> <—Å—É–º–º–∞>` - –ù–æ–≤—ã–π —Ñ–∏–ª—å–º\n‚Ä¢ `!cinemalist` - –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫",
				Inline: false,
			},
		},
		Footer: &discordgo.MessageEmbedFooter{
			Text: "–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∫—Ä–µ–¥–∏—Ç–æ–≤ ‚Üì",
		},
		Timestamp: time.Now().Format(time.RFC3339),
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ä–∞–∑–±–∏–≤–∞–µ–º
	if len(embed.Description) > 2000 {
		log.Printf("–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ, —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏")

		// –ü–µ—Ä–≤–∞—è —á–∞—Å—Ç—å - –ø–µ—Ä–≤–∞—è –ø–æ–ª–æ–≤–∏–Ω–∞
		builder1 := strings.Builder{}
		builder1.WriteString(fmt.Sprintf("**üé¨ –¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ (%d) - –ß–∞—Å—Ç—å 1/2**\n\n", len(r.cinemaOptions)))

		for i := 0; i < half && i < 15; i++ {
			if i < len(sortedOptions) {
				option := sortedOptions[i]
				filmName := option.Name
				if filmName == "" {
					filmName = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
				}
				if len(filmName) > 25 {
					filmName = filmName[:22] + "..."
				}
				builder1.WriteString(fmt.Sprintf("`%2d.` %-25s `%7d`\n", i+1, filmName, option.Total))
			}
		}

		embed1 := &discordgo.MessageEmbed{
			Title:       "üé• –ö–ò–ù–û–ê–£–ö–¶–ò–û–ù",
			Description: builder1.String(),
			Color:       0x1E90FF,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ß–∞—Å—Ç—å 1/2"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}

		// –í—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å - –≤—Ç–æ—Ä–∞—è –ø–æ–ª–æ–≤–∏–Ω–∞
		builder2 := strings.Builder{}
		builder2.WriteString(fmt.Sprintf("**üé¨ –¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ (%d) - –ß–∞—Å—Ç—å 2/2**\n\n", len(r.cinemaOptions)))

		start := half
		if start > 15 {
			start = 15
		}

		for i := start; i < len(sortedOptions); i++ {
			option := sortedOptions[i]
			filmName := option.Name
			if filmName == "" {
				filmName = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
			}
			if len(filmName) > 25 {
				filmName = filmName[:22] + "..."
			}
			builder2.WriteString(fmt.Sprintf("`%2d.` %-25s `%7d`\n", i+1, filmName, option.Total))
		}

		embed2 := &discordgo.MessageEmbed{
			Title:       "üé• –ö–ò–ù–û–ê–£–ö–¶–ò–û–ù",
			Description: builder2.String(),
			Color:       0x1E90FF,
			Fields: []*discordgo.MessageEmbedField{
				{
					Name:   "üìã –ö–æ–º–∞–Ω–¥—ã",
					Value:  "‚Ä¢ `!betcinema <–Ω–æ–º–µ—Ä> <—Å—É–º–º–∞>` - –°—Ç–∞–≤–∫–∞\n‚Ä¢ `!cinema <–Ω–∞–∑–≤–∞–Ω–∏–µ> <—Å—É–º–º–∞>` - –ù–æ–≤—ã–π —Ñ–∏–ª—å–º",
					Inline: false,
				},
			},
			Footer:    &discordgo.MessageEmbedFooter{Text: "–ß–∞—Å—Ç—å 2/2 ‚Ä¢ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∫—Ä–µ–¥–∏—Ç–∞–º ‚Üì"},
			Timestamp: time.Now().Format(time.RFC3339),
		}

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–µ —á–∞—Å—Ç–∏
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed1); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–∞—Å—Ç–∏ 1: %v", err)
		}
		time.Sleep(500 * time.Millisecond)
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed2); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–∞—Å—Ç–∏ 2: %v", err)
		}

	} else {
		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–¥–∏–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !cinemalist: %v", err)
		}
	}

	log.Printf("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ !cinemalist")
}

func (r *Ranking) HandleAdminCinemaListCommand(s *discordgo.Session, m *discordgo.MessageCreate) {
	log.Printf("–ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ !admincinemalist –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %s", m.Author.ID)
	r.mu.Lock()
	defer r.mu.Unlock()

	if !r.IsAdmin(m.Author.ID) {
		log.Printf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s –Ω–µ –∞–¥–º–∏–Ω", m.Author.ID)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !admincinemalist: %v", err)
		}
		return
	}

	if len(r.cinemaOptions) == 0 {
		log.Printf("–°–ø–∏—Å–æ–∫ cinemaOptions –ø—É—Å—Ç")
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "üìã –°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –ø—É—Å—Ç",
			Color:       randomColor(),
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !admincinemalist: %v", err)
		}
		return
	}

	log.Printf("–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è %d —Ñ–∏–ª—å–º–æ–≤", len(r.cinemaOptions))
	table := "```css\n"
	table += fmt.Sprintf("%-5s %-40s %-10s %s\n", "#", "–§–∏–ª—å–º", "–ö—Ä–µ–¥–∏—Ç—ã", "–°—Ç–∞–≤–∫–∏")
	table += strings.Repeat("-", 80) + "\n"

	for i, option := range r.cinemaOptions {
		if i >= 100 {
			log.Printf("–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –≤ 100 –ø–æ–∑–∏—Ü–∏–π")
			break
		}
		filmName := option.Name
		if filmName == "" {
			log.Printf("–ü—É—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –¥–ª—è –ø–æ–∑–∏—Ü–∏–∏ %d, –∑–∞–º–µ–Ω–∞ –Ω–∞ '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–∏–ª—å–º'", i+1)
			filmName = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–∏–ª—å–º"
		}
		if len(filmName) > 37 {
			filmName = filmName[:34] + "..."
		}
		bets := []string{}
		for userID, amount := range option.Bets {
			bets = append(bets, fmt.Sprintf("<@%s>: %d", userID, amount))
		}
		betsStr := strings.Join(bets, ", ")
		if betsStr == "" {
			betsStr = "–ù–µ—Ç —Å—Ç–∞–≤–æ–∫"
		}
		if len(betsStr) > 100 {
			betsStr = betsStr[:97] + "..."
		}
		table += fmt.Sprintf("%-5d %-40s %-10d %s\n", i+1, filmName, option.Total, betsStr)
	}
	table += "```"

	embed := &discordgo.MessageEmbed{
		Title:       "üé• –î–µ—Ç–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ (–∞–¥–º–∏–Ω)",
		Description: fmt.Sprintf("üìã –¢–µ–∫—É—â–∏–µ —Ñ–∏–ª—å–º—ã –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ (%d):\n%s", len(r.cinemaOptions), table),
		Color:       randomColor(),
		Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨ | –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"},
		Timestamp:   time.Now().Format(time.RFC3339),
	}

	log.Printf("–î–ª–∏–Ω–∞ –æ–ø–∏—Å–∞–Ω–∏—è embed: %d —Å–∏–º–≤–æ–ª–æ–≤", len(embed.Description))
	if len(embed.Description) > 2000 {
		log.Printf("–†–∞–∑–±–∏–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
		parts, err := splitLongMessage(embed.Description, 1900)
		if err != nil {
			log.Printf("–û—à–∏–±–∫–∞ —Ä–∞–∑–±–∏–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !admincinemalist: %v", err)
			embed := &discordgo.MessageEmbed{
				Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
				Description: "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–ø–∏—Å–∫–∞",
				Color:       0xFF0000,
				Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
				Timestamp:   time.Now().Format(time.RFC3339),
			}
			if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
				log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è !admincinemalist: %v", err)
			}
			return
		}
		for i, part := range parts {
			log.Printf("–û—Ç–ø—Ä–∞–≤–∫–∞ —á–∞—Å—Ç–∏ %d –∏–∑ %d", i+1, len(parts))
			partEmbed := &discordgo.MessageEmbed{
				Title:       fmt.Sprintf("üé• –î–µ—Ç–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ (–ß–∞—Å—Ç—å %d)", i+1),
				Description: part,
				Color:       embed.Color,
				Footer:      embed.Footer,
				Timestamp:   embed.Timestamp,
			}
			if _, err := s.ChannelMessageSendEmbed(m.ChannelID, partEmbed); err != nil {
				log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–∞—Å—Ç–∏ %d –¥–ª—è !admincinemalist: %v", i+1, err)
			} else {
				log.Printf("–ß–∞—Å—Ç—å %d —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞", i+1)
			}
		}
	} else {
		log.Printf("–û—Ç–ø—Ä–∞–≤–∫–∞ –µ–¥–∏–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !admincinemalist –≤ –∫–∞–Ω–∞–ª %s", m.ChannelID)
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !admincinemalist: %v", err)
		} else {
			log.Printf("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
		}
	}
	log.Printf("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ !admincinemalist")
}

func (r *Ranking) HandleRemoveLowestCommand(s *discordgo.Session, m *discordgo.MessageCreate, command string) {
	log.Printf("–ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ !removelowest: %s –æ—Ç %s", command, m.Author.ID)

	if !r.IsAdmin(m.Author.ID) {
		log.Printf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s –Ω–µ –∞–¥–º–∏–Ω", m.Author.ID)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç —É–¥–∞–ª—è—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !removelowest: %v", err)
		}
		return
	}

	args := strings.Fields(command)
	if len(args) != 2 {
		log.Printf("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã: %s", command)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã",
			Color:       0xFF0000,
			Fields: []*discordgo.MessageEmbedField{
				{Name: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", Value: "`!removelowest <—á–∏—Å–ª–æ>`\n–ü—Ä–∏–º–µ—Ä: `!removelowest 2`", Inline: false},
			},
			Footer:    &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp: time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !removelowest: %v", err)
		}
		return
	}

	count, err := strconv.Atoi(args[1])
	if err != nil || count <= 0 {
		log.Printf("–ù–µ–≤–µ—Ä–Ω–æ–µ —á–∏—Å–ª–æ: %s", args[1])
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !removelowest: %v", err)
		}
		return
	}

	r.mu.Lock()
	defer r.mu.Unlock()

	if len(r.cinemaOptions) == 0 {
		log.Printf("–°–ø–∏—Å–æ–∫ cinemaOptions –ø—É—Å—Ç")
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "üìã –°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –ø—É—Å—Ç, —É–¥–∞–ª—è—Ç—å –Ω–µ—á–µ–≥–æ",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !removelowest: %v", err)
		}
		return
	}

	if count > len(r.cinemaOptions) {
		log.Printf("–£–∫–∞–∑–∞–Ω–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: %d, –¥–æ—Å—Ç—É–ø–Ω–æ: %d, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é count = %d", count, len(r.cinemaOptions), len(r.cinemaOptions))
		count = len(r.cinemaOptions)
	}

	// –°–æ–∑–¥–∞–µ–º —Å–ª–∞–π—Å —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏ –∏ —Å—É–º–º–∞–º–∏ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
	type filmIndex struct {
		index int
		total int
		name  string
	}

	films := make([]filmIndex, len(r.cinemaOptions))
	for i, option := range r.cinemaOptions {
		films[i] = filmIndex{index: i, total: option.Total, name: option.Name}
	}

	// –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é (–æ—Ç –º–µ–Ω—å—à–µ–≥–æ –∫ –±–æ–ª—å—à–µ–º—É)
	sort.Slice(films, func(i, j int) bool {
		return films[i].total < films[j].total
	})

	// –ü–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–ø–µ—Ä–≤—ã–µ count —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
	indexesToRemove := make([]int, count)
	removedFilms := make([]string, 0, count)

	for i := 0; i < count; i++ {
		indexesToRemove[i] = films[i].index
		filmName := films[i].name
		if filmName == "" {
			filmName = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–∏–ª—å–º"
		}
		removedFilms = append(removedFilms, filmName)
	}

	// –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏–Ω–¥–µ–∫—Å—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
	sort.Sort(sort.Reverse(sort.IntSlice(indexesToRemove)))

	// –£–¥–∞–ª—è–µ–º —Ñ–∏–ª—å–º—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—Ä–µ–¥–∏—Ç—ã
	for _, index := range indexesToRemove {
		option := r.cinemaOptions[index]
		for userID, amount := range option.Bets {
			log.Printf("–í–æ–∑–≤—Ä–∞—Ç %d –∫—Ä–µ–¥–∏—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é %s –∑–∞ —Ñ–∏–ª—å–º '%s'", amount, userID, option.Name)
			r.UpdateRating(userID, amount)
			r.LogCreditOperation(s, fmt.Sprintf("–í–æ–∑–≤—Ä–∞—â–µ–Ω–æ %d –∫—Ä–µ–¥–∏—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <@%s> –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∏–ª—å–º–∞ '%s'", amount, userID, option.Name))
		}

		// –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å–ª–∞–π—Å–∞
		r.cinemaOptions = append(r.cinemaOptions[:index], r.cinemaOptions[index+1:]...)
	}

	if err := r.SaveCinemaOptions(); err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è cinemaOptions: %v", err)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∞—É–∫—Ü–∏–æ–Ω–∞",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è !removelowest: %v", err)
		}
		return
	}

	log.Printf("–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ embed –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤: %v", removedFilms)
	embed := &discordgo.MessageEmbed{
		Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
		Description: fmt.Sprintf("üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ %d –≤–∞—Ä–∏–∞–Ω—Ç(–æ–≤) —Å –Ω–∞–∏–º–µ–Ω—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∫—Ä–µ–¥–∏—Ç–æ–≤", count),
		Color:       randomColor(),
		Fields: []*discordgo.MessageEmbedField{
			{Name: "–£–¥–∞–ª—ë–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã", Value: strings.Join(removedFilms, ", "), Inline: false},
			{Name: "–î–µ–π—Å—Ç–≤–∏–µ", Value: "–ö—Ä–µ–¥–∏—Ç—ã –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã —É—á–∞—Å—Ç–Ω–∏–∫–∞–º", Inline: false},
		},
		Footer:    &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
		Timestamp: time.Now().Format(time.RFC3339),
	}

	if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !removelowest: %v", err)
	} else {
		log.Printf("–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
	}
	log.Printf("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ !removelowest")
}

func (r *Ranking) HandleAdjustCinemaCommand(s *discordgo.Session, m *discordgo.MessageCreate, command string) {
	log.Printf("–ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ !adjustcinema: %s –æ—Ç %s", command, m.Author.ID)

	if !r.IsAdmin(m.Author.ID) {
		log.Printf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s –Ω–µ –∞–¥–º–∏–Ω", m.Author.ID)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !adjustcinema: %v", err)
		}
		return
	}

	args := strings.Fields(command)
	if len(args) != 3 {
		log.Printf("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã: %s", command)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã",
			Color:       0xFF0000,
			Fields: []*discordgo.MessageEmbedField{
				{Name: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", Value: "`!adjustcinema <–Ω–æ–º–µ—Ä> <+/-—Å—É–º–º–∞>`\n–ü—Ä–∏–º–µ—Ä: `!adjustcinema 1 +100`", Inline: false},
			},
			Footer:    &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp: time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !adjustcinema: %v", err)
		}
		return
	}

	r.mu.Lock()
	defer r.mu.Unlock()

	// –°–æ–∑–¥–∞–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–æ–ø–∏—é –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞
	sortedOptions := make([]CinemaOption, len(r.cinemaOptions))
	copy(sortedOptions, r.cinemaOptions)
	sort.Slice(sortedOptions, func(i, j int) bool {
		return sortedOptions[i].Total > sortedOptions[j].Total
	})

	index, err := strconv.Atoi(args[1])
	if err != nil || index < 1 || index > len(sortedOptions) {
		log.Printf("–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞: %s, –¥–æ—Å—Ç—É–ø–Ω–æ: %d —Ñ–∏–ª—å–º–æ–≤", args[1], len(sortedOptions))
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: fmt.Sprintf("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞ (–¥–æ—Å—Ç—É–ø–Ω–æ: 1-%d)", len(sortedOptions)),
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !adjustcinema: %v", err)
		}
		return
	}

	// –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ñ–∏–ª—å–º –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º –º–∞—Å—Å–∏–≤–µ
	filmToAdjust := sortedOptions[index-1]
	var originalIndex int = -1
	for i, option := range r.cinemaOptions {
		if option.Name == filmToAdjust.Name && option.Total == filmToAdjust.Total {
			originalIndex = i
			break
		}
	}

	if originalIndex == -1 {
		log.Printf("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∏–ª—å–º –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º –º–∞—Å—Å–∏–≤–µ: %s", filmToAdjust.Name)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∏–ª—å–º –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !adjustcinema: %v", err)
		}
		return
	}

	adjustmentStr := args[2]
	adjustment, err := strconv.Atoi(adjustmentStr)
	if err != nil {
		log.Printf("–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞: %s", adjustmentStr)
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, +100 –∏–ª–∏ -50)",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !adjustcinema: %v", err)
		}
		return
	}

	oldTotal := r.cinemaOptions[originalIndex].Total
	r.cinemaOptions[originalIndex].Total += adjustment
	if r.cinemaOptions[originalIndex].Total < 0 {
		log.Printf("–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –ø—Ä–∏–≤–µ–ª–∞ –∫ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π —Å—É–º–º–µ, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ 0 –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–∞ #%d", index)
		r.cinemaOptions[originalIndex].Total = 0
	}

	if err := r.SaveCinemaOptions(); err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è cinemaOptions: %v", err)
		r.cinemaOptions[originalIndex].Total = oldTotal // –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
		embed := &discordgo.MessageEmbed{
			Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
			Description: "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∞—É–∫—Ü–∏–æ–Ω–∞",
			Color:       0xFF0000,
			Footer:      &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
			Timestamp:   time.Now().Format(time.RFC3339),
		}
		if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è !adjustcinema: %v", err)
		}
		return
	}

	log.Printf("–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–∞ #%d (%s), —Å—Ç–∞—Ä–∞—è —Å—É–º–º–∞: %d, –Ω–æ–≤–∞—è —Å—É–º–º–∞: %d", index, filmToAdjust.Name, oldTotal, r.cinemaOptions[originalIndex].Total)
	embed := &discordgo.MessageEmbed{
		Title:       "üé• –ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω",
		Description: fmt.Sprintf("‚öôÔ∏è –í–∞—Ä–∏–∞–Ω—Ç #%d —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω", index),
		Color:       randomColor(),
		Fields: []*discordgo.MessageEmbedField{
			{Name: "–§–∏–ª—å–º", Value: filmToAdjust.Name, Inline: true},
			{Name: "–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞", Value: adjustmentStr, Inline: true},
			{Name: "–ù–æ–≤–∞—è —Å—É–º–º–∞", Value: fmt.Sprintf("%d –∫—Ä–µ–¥–∏—Ç–æ–≤", r.cinemaOptions[originalIndex].Total), Inline: true},
		},
		Footer:    &discordgo.MessageEmbedFooter{Text: "–ö–∏–Ω–æ–∞—É–∫—Ü–∏–æ–Ω üé¨"},
		Timestamp: time.Now().Format(time.RFC3339),
	}
	if _, err := s.ChannelMessageSendEmbed(m.ChannelID, embed); err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è !adjustcinema: %v", err)
	} else {
		log.Printf("–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª %s", m.ChannelID)
	}
	log.Printf("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ !adjustcinema")
}

func generateBidID(userID string) string {
	return fmt.Sprintf("%s-%d", userID, time.Now().UnixNano())
}

func splitLongMessage(message string, maxLength int) ([]string, error) {
	log.Printf("–†–∞–∑–±–∏–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª–∏–Ω–æ–π %d —Å–∏–º–≤–æ–ª–æ–≤, maxLength: %d", len(message), maxLength)
	if maxLength <= 0 {
		log.Printf("–û—à–∏–±–∫–∞: maxLength –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º")
		return nil, fmt.Errorf("maxLength –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º")
	}
	if message == "" {
		log.Printf("–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ, –≤–æ–∑–≤—Ä–∞—Ç –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞")
		return []string{"```\n(–ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫)\n```"}, nil
	}

	var parts []string
	lines := strings.Split(message, "\n")
	currentPart := ""
	currentLength := 0

	for _, line := range lines {
		if len(line) > maxLength {
			log.Printf("–û–±—Ä–µ–∑–∫–∞ –¥–ª–∏–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏: %d —Å–∏–º–≤–æ–ª–æ–≤", len(line))
			line = line[:maxLength-3] + "..."
		}
		if currentLength+len(line)+1 > maxLength {
			if currentPart == "" {
				currentPart = "```\n"
			}
			parts = append(parts, currentPart+"```")
			log.Printf("–î–æ–±–∞–≤–ª–µ–Ω–∞ —á–∞—Å—Ç—å –¥–ª–∏–Ω–æ–π %d —Å–∏–º–≤–æ–ª–æ–≤", len(currentPart+"```"))
			currentPart = "```\n"
			currentLength = len(line) + len("```css\n") + 1
		} else {
			if currentPart == "" {
				currentPart = "```"
			}
			currentPart += line + "\n"
			currentLength += len(line) + 1
		}
	}

	if currentPart != "" {
		parts = append(parts, currentPart+"```")
		log.Printf("–î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è —á–∞—Å—Ç—å –¥–ª–∏–Ω–æ–π %d —Å–∏–º–≤–æ–ª–æ–≤", len(currentPart+"```"))
	}

	if len(parts) == 0 {
		log.Printf("–°–ø–∏—Å–æ–∫ —á–∞—Å—Ç–µ–π –ø—É—Å—Ç, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π —á–∞—Å—Ç–∏")
		parts = append(parts, "```\n(–ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫)\n```")
	}

	log.Printf("–°–æ–æ–±—â–µ–Ω–∏–µ —Ä–∞–∑–±–∏—Ç–æ –Ω–∞ %d —á–∞—Å—Ç–µ–π", len(parts))
	return parts, nil
}
